body {
  margin: 0;
  padding: 0;
  background: #fff;
  color: #444;
  font: 16px/1.4 "lucida grande", "helvetica neue", "helvetica", sans-serif;
}

* {
  box-sizing: border-box;
}

header#body-header {
  display: flex;
  margin: 0;
  background: #444;
  color: #fff;

  h1 {
    flex: 0 1 auto;
    margin: 0;
    padding: 10px 15px 10px 10px;

    font-size: 18px;

  }

  nav {
    align-self: center;
    flex: 0 1 auto;
    ul {
      margin: 0;
      padding: 0;
      list-style: none;
      display: flex;
      align-items: flex-start;
      justify-content: center;
      li {
        padding: 0;
        margin: 0;
        a {
          padding: 12px 20px;
          background: #369;
          color: #fff;
          text-decoration: none;
          &:hover, &:active {
            background: #fff;
            color: #369
          }
        }
      }
    }
  }
}

section {
  margin: 10px 50px 50px;
  padding: 10px;

  h2 {
    margin: 0;
    padding: 0;
  }

  @media (max-width: 600px) {
    margin: 10px;
  }

}

section#step-one {
  #photo-array {
    display: flex;
    align-items: center;
    justify-content: space-around;

    flex-wrap: wrap;

    // Try changing the flex: line below to:
    // flex: 1 1 auto;
    // or
    // flex: 0 0 50%;
    // and then put it back to:
    // flex: 0 0 29%;
    .photo {
      flex: 0 0 29%;
      margin: 1% 1% 10px;
      padding: 0;
      background: #efefef;
      border: solid 1px #444;

      img {
        margin: 0;
        padding: 0;
        max-width: 100%;
        min-width: 100%;
      }
      p.caption {
        margin: 0;
        padding: 20px;
        text-align: center;
      }
    }

    // And this is how we make things responsive!  Cool, right?

    @media (max-width: 1024px) {
      .photo {
        flex: 0 0 45%;
        p.caption {
          padding: 10px;
        }
      }
    }

    @media (max-width: 600px) {
      .photo {
        flex: 0 0 96%;
        p.caption {
          padding: 5px;
        }
      }
    }

  }
}

section#step-two {
  form {
    .form-group {
      display: flex;
      padding: 0;
      margin: 10px 0;

      label {
        flex: 0 0 36%;
        padding: 10px 2%;
        text-align: right;
        font-weight: bold;
      }

      input, textarea, select {
        flex: 0 0 60%;
        border-radius: 5px;
        border: solid 1px #888;
        &:focus {
          border-color: #9cf;
        }
      }
    }

  }
}

section#step-three {
  nav#grid-switcher-container {
    ul {
      margin: 10px auto;
      padding: 0;
      list-style: none;
      display: flex;
      justify-content: space-around;
      align-items: center;

      li {
        flex: auto;
        margin: 0 5px;
        padding: 0;
        text-align: center;

        &:first-child {
          margin-left: 0;
        }
        &:last-child {
          margin-right: 0;
        }

        button {
          margin: 0;
          padding: .5em 1em;
          border: solid 1px #036;
          border-radius: 6px;
          background: #369;
          font-size: 15px;
          color: #fff;

          &:hover, &:active {
            background: #036;
            cursor: pointer;
          }
        }

      }
    }
  }
}

section#step-five {
  #resource-links {
    display: flex;
    justify-content: flex-start;

    aside {
      flex: 1;
      border: solid 1px #ccc;

      &:first-child {
        border-right: none;
      }

      h3 {
        margin: 0;
        padding: 10px;
        background: #ccc;
      }

      ul {
        margin: 0;
        padding: 0;
        list-style: none;

        li {
          border-bottom: solid 1px #ccc;
          &:last-child {
            border-bottom: none;
          }

          a {
            display: block;
            padding: 10px;
            margin: 0;
            text-decoration: none;
            color: #369;

            &:hover, &:active {
              color: #ccc;
              background: #369;
            }

          }

        }

      }

    }
  }
}

footer#body-footer {
  background: #444;
  nav {
    ul {
      display: flex;
      margin: 0;
      padding: 0;
      list-style: none;
      align-items: flex-start;
      li {
        flex: 1 1 auto;
        a {
          display: block;
          padding: 5px 10px;
          background: #369;
          color: #fff;
          text-align: center;
          text-decoration: none;
          &:hover, &:active {
            background: #fff;
            color: #369;
          }
        }
      }
    }
  }
}

// These are the variants for step three:

body.two-columns {
  & > main {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 0.5rem;

    section {
      padding: 10px;
      border: solid 1px #333;
    }

  }
}

body.old-school-left-nav, body.change-grid-order {
  display: grid;

  grid-template-columns: repeat(9, 1fr);
  grid-auto-rows: minmax(100px, auto);
  // This was really confusing for me. Each ROW in your template areas property is
  // a new quoted string, WITH NO COMMA between the row strings.
  // Yeah, took me many minutes to figure this one out.
  grid-template-areas: "sd sd mn mn mn mn mn mn mn"
  "ft ft ft ft ft ft ft ft ft";

  // Never seen the > selector?  It's a direct child selector!
  & > header#body-header {
    grid-area: sd;
    display: block;
    h1 {
      padding-top: 10px;
      padding-bottom: 10px;
    }
    nav {
      ul {
        display: block;
        li {
          display: block;
          border-bottom: solid 1px #444;
          a {
            display: block;
          }
        }
      }
    }
  }

  // grid-area assigns an element to a specific grid area from, you guessed it,
  // the grid-template-areas property!
  & > main {
    grid-area: mn;
  }

  & > footer#body-footer {
    grid-area: ft;
    position: fixed;
    bottom: 0;
    width: 100%;
  }

}

body.change-grid-order {
  grid-auto-rows: minmax(32px, auto);
  grid-template-areas: "ft ft ft ft ft ft ft ft ft"
  "mn mn mn mn mn mn mn sd sd";

  & > footer#body-footer {
    position: relative;
    bottom: auto;

    nav {
      ul {
        li:first-child {
          display: none;
        }
      }
    }

  }
}

// And making the change-grid-order option responsive:

body.change-grid-order {
  // The desktop view is great, but let's handle the 750px breakpoint:
  @media (max-width: 750px) {
    grid-template-columns: auto;
    grid-template-areas: "sd" "mn" "ft";

    & > footer#body-footer {
      position: relative;
      bottom: auto;

      nav {
        ul {
          li:first-child {
            display: block;
          }
        }
      }

    }
  }

  // And the really mobile view
  @media (max-width: 325px) {
    // We kind of did everything we needed to do in the 750, but we should probably hide the top nav:
    header#body-header {
      nav {
        display: none;
      }
    }
  }

}
